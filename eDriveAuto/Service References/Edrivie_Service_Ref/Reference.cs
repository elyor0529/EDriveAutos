//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.251
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Edrive.Edrivie_Service_Ref {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Customer", Namespace="http://schemas.datacontract.org/2004/07/EdriveService.DataContract")]
    [System.SerializableAttribute()]
    public partial class Customer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateofBirthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpiryDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsFeaturedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NewsletterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetAddress1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ZipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool activeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string customerGUIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int customerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int customerTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string emailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string iPAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isTrialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string passwordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime registrationDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyName {
            get {
                return this.CompanyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyNameField, value) != true)) {
                    this.CompanyNameField = value;
                    this.RaisePropertyChanged("CompanyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateofBirth {
            get {
                return this.DateofBirthField;
            }
            set {
                if ((this.DateofBirthField.Equals(value) != true)) {
                    this.DateofBirthField = value;
                    this.RaisePropertyChanged("DateofBirth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpiryDate {
            get {
                return this.ExpiryDateField;
            }
            set {
                if ((this.ExpiryDateField.Equals(value) != true)) {
                    this.ExpiryDateField = value;
                    this.RaisePropertyChanged("ExpiryDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fax {
            get {
                return this.FaxField;
            }
            set {
                if ((object.ReferenceEquals(this.FaxField, value) != true)) {
                    this.FaxField = value;
                    this.RaisePropertyChanged("Fax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((object.ReferenceEquals(this.GenderField, value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsFeatured {
            get {
                return this.IsFeaturedField;
            }
            set {
                if ((this.IsFeaturedField.Equals(value) != true)) {
                    this.IsFeaturedField = value;
                    this.RaisePropertyChanged("IsFeatured");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Newsletter {
            get {
                return this.NewsletterField;
            }
            set {
                if ((this.NewsletterField.Equals(value) != true)) {
                    this.NewsletterField = value;
                    this.RaisePropertyChanged("Newsletter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StateID {
            get {
                return this.StateIDField;
            }
            set {
                if ((this.StateIDField.Equals(value) != true)) {
                    this.StateIDField = value;
                    this.RaisePropertyChanged("StateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StateName {
            get {
                return this.StateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StateNameField, value) != true)) {
                    this.StateNameField = value;
                    this.RaisePropertyChanged("StateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StreetAddress1 {
            get {
                return this.StreetAddress1Field;
            }
            set {
                if ((object.ReferenceEquals(this.StreetAddress1Field, value) != true)) {
                    this.StreetAddress1Field = value;
                    this.RaisePropertyChanged("StreetAddress1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StreetAddress2 {
            get {
                return this.StreetAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.StreetAddress2Field, value) != true)) {
                    this.StreetAddress2Field = value;
                    this.RaisePropertyChanged("StreetAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Zip {
            get {
                return this.ZipField;
            }
            set {
                if ((this.ZipField.Equals(value) != true)) {
                    this.ZipField = value;
                    this.RaisePropertyChanged("Zip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool active {
            get {
                return this.activeField;
            }
            set {
                if ((this.activeField.Equals(value) != true)) {
                    this.activeField = value;
                    this.RaisePropertyChanged("active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string customerGUID {
            get {
                return this.customerGUIDField;
            }
            set {
                if ((object.ReferenceEquals(this.customerGUIDField, value) != true)) {
                    this.customerGUIDField = value;
                    this.RaisePropertyChanged("customerGUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int customerID {
            get {
                return this.customerIDField;
            }
            set {
                if ((this.customerIDField.Equals(value) != true)) {
                    this.customerIDField = value;
                    this.RaisePropertyChanged("customerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int customerType {
            get {
                return this.customerTypeField;
            }
            set {
                if ((this.customerTypeField.Equals(value) != true)) {
                    this.customerTypeField = value;
                    this.RaisePropertyChanged("customerType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string email {
            get {
                return this.emailField;
            }
            set {
                if ((object.ReferenceEquals(this.emailField, value) != true)) {
                    this.emailField = value;
                    this.RaisePropertyChanged("email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string iPAddress {
            get {
                return this.iPAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.iPAddressField, value) != true)) {
                    this.iPAddressField = value;
                    this.RaisePropertyChanged("iPAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isTrial {
            get {
                return this.isTrialField;
            }
            set {
                if ((this.isTrialField.Equals(value) != true)) {
                    this.isTrialField = value;
                    this.RaisePropertyChanged("isTrial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                if ((object.ReferenceEquals(this.passwordField, value) != true)) {
                    this.passwordField = value;
                    this.RaisePropertyChanged("password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime registrationDate {
            get {
                return this.registrationDateField;
            }
            set {
                if ((this.registrationDateField.Equals(value) != true)) {
                    this.registrationDateField = value;
                    this.RaisePropertyChanged("registrationDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Product_Picture", Namespace="http://schemas.datacontract.org/2004/07/EdriveService.DataContract")]
    [System.SerializableAttribute()]
    public partial class Product_Picture : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DisplayOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PictureURLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProductIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProductPictureIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DisplayOrder {
            get {
                return this.DisplayOrderField;
            }
            set {
                if ((this.DisplayOrderField.Equals(value) != true)) {
                    this.DisplayOrderField = value;
                    this.RaisePropertyChanged("DisplayOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PictureURL {
            get {
                return this.PictureURLField;
            }
            set {
                if ((object.ReferenceEquals(this.PictureURLField, value) != true)) {
                    this.PictureURLField = value;
                    this.RaisePropertyChanged("PictureURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductID {
            get {
                return this.ProductIDField;
            }
            set {
                if ((this.ProductIDField.Equals(value) != true)) {
                    this.ProductIDField = value;
                    this.RaisePropertyChanged("ProductID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductPictureID {
            get {
                return this.ProductPictureIDField;
            }
            set {
                if ((this.ProductPictureIDField.Equals(value) != true)) {
                    this.ProductPictureIDField = value;
                    this.RaisePropertyChanged("ProductPictureID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Products", Namespace="http://schemas.datacontract.org/2004/07/EdriveService.DataContract")]
    [System.SerializableAttribute()]
    public partial class Products : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Edrive.Edrivie_Service_Ref.Customer CustomerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MakeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MakeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModelNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnerDetailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReservedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ShowOnDealerProfileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VehicleTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int YearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal averageRetailPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal averageTradeinPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string bodyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int bodyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int city_FuelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string conditionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime createdOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int customerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime date_in_StockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool deletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string descriptiontField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int doorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string drive_TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string engineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string exteriorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string fileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string free_TextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string fuel_TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int highWay_FuelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string interiorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isNewField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isfeatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int mileageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int modelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string optionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string picsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal price_CostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal price_CurrentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal price_WholeSaleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int productIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool publishedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal qualifyPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal savingAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int stateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string stockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string transmissionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string trimField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int typeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime updatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string vehicleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string vinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool warrantyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int zipField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Edrive.Edrivie_Service_Ref.Customer Customer {
            get {
                return this.CustomerField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerField, value) != true)) {
                    this.CustomerField = value;
                    this.RaisePropertyChanged("Customer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Make {
            get {
                return this.MakeField;
            }
            set {
                if ((object.ReferenceEquals(this.MakeField, value) != true)) {
                    this.MakeField = value;
                    this.RaisePropertyChanged("Make");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MakeName {
            get {
                return this.MakeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MakeNameField, value) != true)) {
                    this.MakeNameField = value;
                    this.RaisePropertyChanged("MakeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModelName {
            get {
                return this.ModelNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ModelNameField, value) != true)) {
                    this.ModelNameField = value;
                    this.RaisePropertyChanged("ModelName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OwnerDetail {
            get {
                return this.OwnerDetailField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerDetailField, value) != true)) {
                    this.OwnerDetailField = value;
                    this.RaisePropertyChanged("OwnerDetail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reserved {
            get {
                return this.ReservedField;
            }
            set {
                if ((object.ReferenceEquals(this.ReservedField, value) != true)) {
                    this.ReservedField = value;
                    this.RaisePropertyChanged("Reserved");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ShowOnDealerProfile {
            get {
                return this.ShowOnDealerProfileField;
            }
            set {
                if ((this.ShowOnDealerProfileField.Equals(value) != true)) {
                    this.ShowOnDealerProfileField = value;
                    this.RaisePropertyChanged("ShowOnDealerProfile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VehicleType {
            get {
                return this.VehicleTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleTypeField, value) != true)) {
                    this.VehicleTypeField = value;
                    this.RaisePropertyChanged("VehicleType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Year {
            get {
                return this.YearField;
            }
            set {
                if ((this.YearField.Equals(value) != true)) {
                    this.YearField = value;
                    this.RaisePropertyChanged("Year");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal averageRetailPrice {
            get {
                return this.averageRetailPriceField;
            }
            set {
                if ((this.averageRetailPriceField.Equals(value) != true)) {
                    this.averageRetailPriceField = value;
                    this.RaisePropertyChanged("averageRetailPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal averageTradeinPrice {
            get {
                return this.averageTradeinPriceField;
            }
            set {
                if ((this.averageTradeinPriceField.Equals(value) != true)) {
                    this.averageTradeinPriceField = value;
                    this.RaisePropertyChanged("averageTradeinPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string body {
            get {
                return this.bodyField;
            }
            set {
                if ((object.ReferenceEquals(this.bodyField, value) != true)) {
                    this.bodyField = value;
                    this.RaisePropertyChanged("body");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int bodyID {
            get {
                return this.bodyIDField;
            }
            set {
                if ((this.bodyIDField.Equals(value) != true)) {
                    this.bodyIDField = value;
                    this.RaisePropertyChanged("bodyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int city_Fuel {
            get {
                return this.city_FuelField;
            }
            set {
                if ((this.city_FuelField.Equals(value) != true)) {
                    this.city_FuelField = value;
                    this.RaisePropertyChanged("city_Fuel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string condition {
            get {
                return this.conditionField;
            }
            set {
                if ((object.ReferenceEquals(this.conditionField, value) != true)) {
                    this.conditionField = value;
                    this.RaisePropertyChanged("condition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime createdOn {
            get {
                return this.createdOnField;
            }
            set {
                if ((this.createdOnField.Equals(value) != true)) {
                    this.createdOnField = value;
                    this.RaisePropertyChanged("createdOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int customerId {
            get {
                return this.customerIdField;
            }
            set {
                if ((this.customerIdField.Equals(value) != true)) {
                    this.customerIdField = value;
                    this.RaisePropertyChanged("customerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime date_in_Stock {
            get {
                return this.date_in_StockField;
            }
            set {
                if ((this.date_in_StockField.Equals(value) != true)) {
                    this.date_in_StockField = value;
                    this.RaisePropertyChanged("date_in_Stock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool deleted {
            get {
                return this.deletedField;
            }
            set {
                if ((this.deletedField.Equals(value) != true)) {
                    this.deletedField = value;
                    this.RaisePropertyChanged("deleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string descriptiont {
            get {
                return this.descriptiontField;
            }
            set {
                if ((object.ReferenceEquals(this.descriptiontField, value) != true)) {
                    this.descriptiontField = value;
                    this.RaisePropertyChanged("descriptiont");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int doors {
            get {
                return this.doorsField;
            }
            set {
                if ((this.doorsField.Equals(value) != true)) {
                    this.doorsField = value;
                    this.RaisePropertyChanged("doors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string drive_Type {
            get {
                return this.drive_TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.drive_TypeField, value) != true)) {
                    this.drive_TypeField = value;
                    this.RaisePropertyChanged("drive_Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string engine {
            get {
                return this.engineField;
            }
            set {
                if ((object.ReferenceEquals(this.engineField, value) != true)) {
                    this.engineField = value;
                    this.RaisePropertyChanged("engine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string exterior {
            get {
                return this.exteriorField;
            }
            set {
                if ((object.ReferenceEquals(this.exteriorField, value) != true)) {
                    this.exteriorField = value;
                    this.RaisePropertyChanged("exterior");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string fileName {
            get {
                return this.fileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.fileNameField, value) != true)) {
                    this.fileNameField = value;
                    this.RaisePropertyChanged("fileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string free_Text {
            get {
                return this.free_TextField;
            }
            set {
                if ((object.ReferenceEquals(this.free_TextField, value) != true)) {
                    this.free_TextField = value;
                    this.RaisePropertyChanged("free_Text");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string fuel_Type {
            get {
                return this.fuel_TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.fuel_TypeField, value) != true)) {
                    this.fuel_TypeField = value;
                    this.RaisePropertyChanged("fuel_Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int highWay_Fuel {
            get {
                return this.highWay_FuelField;
            }
            set {
                if ((this.highWay_FuelField.Equals(value) != true)) {
                    this.highWay_FuelField = value;
                    this.RaisePropertyChanged("highWay_Fuel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string interior {
            get {
                return this.interiorField;
            }
            set {
                if ((object.ReferenceEquals(this.interiorField, value) != true)) {
                    this.interiorField = value;
                    this.RaisePropertyChanged("interior");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isNew {
            get {
                return this.isNewField;
            }
            set {
                if ((this.isNewField.Equals(value) != true)) {
                    this.isNewField = value;
                    this.RaisePropertyChanged("isNew");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isfeature {
            get {
                return this.isfeatureField;
            }
            set {
                if ((this.isfeatureField.Equals(value) != true)) {
                    this.isfeatureField = value;
                    this.RaisePropertyChanged("isfeature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int mileage {
            get {
                return this.mileageField;
            }
            set {
                if ((this.mileageField.Equals(value) != true)) {
                    this.mileageField = value;
                    this.RaisePropertyChanged("mileage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int model {
            get {
                return this.modelField;
            }
            set {
                if ((this.modelField.Equals(value) != true)) {
                    this.modelField = value;
                    this.RaisePropertyChanged("model");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string options {
            get {
                return this.optionsField;
            }
            set {
                if ((object.ReferenceEquals(this.optionsField, value) != true)) {
                    this.optionsField = value;
                    this.RaisePropertyChanged("options");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string pics {
            get {
                return this.picsField;
            }
            set {
                if ((object.ReferenceEquals(this.picsField, value) != true)) {
                    this.picsField = value;
                    this.RaisePropertyChanged("pics");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal price_Cost {
            get {
                return this.price_CostField;
            }
            set {
                if ((this.price_CostField.Equals(value) != true)) {
                    this.price_CostField = value;
                    this.RaisePropertyChanged("price_Cost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal price_Current {
            get {
                return this.price_CurrentField;
            }
            set {
                if ((this.price_CurrentField.Equals(value) != true)) {
                    this.price_CurrentField = value;
                    this.RaisePropertyChanged("price_Current");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal price_WholeSale {
            get {
                return this.price_WholeSaleField;
            }
            set {
                if ((this.price_WholeSaleField.Equals(value) != true)) {
                    this.price_WholeSaleField = value;
                    this.RaisePropertyChanged("price_WholeSale");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int productId {
            get {
                return this.productIdField;
            }
            set {
                if ((this.productIdField.Equals(value) != true)) {
                    this.productIdField = value;
                    this.RaisePropertyChanged("productId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool published {
            get {
                return this.publishedField;
            }
            set {
                if ((this.publishedField.Equals(value) != true)) {
                    this.publishedField = value;
                    this.RaisePropertyChanged("published");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal qualifyPrice {
            get {
                return this.qualifyPriceField;
            }
            set {
                if ((this.qualifyPriceField.Equals(value) != true)) {
                    this.qualifyPriceField = value;
                    this.RaisePropertyChanged("qualifyPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal savingAmount {
            get {
                return this.savingAmountField;
            }
            set {
                if ((this.savingAmountField.Equals(value) != true)) {
                    this.savingAmountField = value;
                    this.RaisePropertyChanged("savingAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int stateID {
            get {
                return this.stateIDField;
            }
            set {
                if ((this.stateIDField.Equals(value) != true)) {
                    this.stateIDField = value;
                    this.RaisePropertyChanged("stateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string stock {
            get {
                return this.stockField;
            }
            set {
                if ((object.ReferenceEquals(this.stockField, value) != true)) {
                    this.stockField = value;
                    this.RaisePropertyChanged("stock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string transmission {
            get {
                return this.transmissionField;
            }
            set {
                if ((object.ReferenceEquals(this.transmissionField, value) != true)) {
                    this.transmissionField = value;
                    this.RaisePropertyChanged("transmission");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string trim {
            get {
                return this.trimField;
            }
            set {
                if ((object.ReferenceEquals(this.trimField, value) != true)) {
                    this.trimField = value;
                    this.RaisePropertyChanged("trim");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int type {
            get {
                return this.typeField;
            }
            set {
                if ((this.typeField.Equals(value) != true)) {
                    this.typeField = value;
                    this.RaisePropertyChanged("type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime updatedOn {
            get {
                return this.updatedOnField;
            }
            set {
                if ((this.updatedOnField.Equals(value) != true)) {
                    this.updatedOnField = value;
                    this.RaisePropertyChanged("updatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string vehicleName {
            get {
                return this.vehicleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.vehicleNameField, value) != true)) {
                    this.vehicleNameField = value;
                    this.RaisePropertyChanged("vehicleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string vin {
            get {
                return this.vinField;
            }
            set {
                if ((object.ReferenceEquals(this.vinField, value) != true)) {
                    this.vinField = value;
                    this.RaisePropertyChanged("vin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool warranty {
            get {
                return this.warrantyField;
            }
            set {
                if ((this.warrantyField.Equals(value) != true)) {
                    this.warrantyField = value;
                    this.RaisePropertyChanged("warranty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int zip {
            get {
                return this.zipField;
            }
            set {
                if ((this.zipField.Equals(value) != true)) {
                    this.zipField = value;
                    this.RaisePropertyChanged("zip");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Country", Namespace="http://schemas.datacontract.org/2004/07/EdriveService.DataContract")]
    [System.SerializableAttribute()]
    public partial class Country : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DisplayOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CountryID {
            get {
                return this.CountryIDField;
            }
            set {
                if ((this.CountryIDField.Equals(value) != true)) {
                    this.CountryIDField = value;
                    this.RaisePropertyChanged("CountryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DisplayOrder {
            get {
                return this.DisplayOrderField;
            }
            set {
                if ((this.DisplayOrderField.Equals(value) != true)) {
                    this.DisplayOrderField = value;
                    this.RaisePropertyChanged("DisplayOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="State", Namespace="http://schemas.datacontract.org/2004/07/EdriveService.DataContract")]
    [System.SerializableAttribute()]
    public partial class State : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AbbreviationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DisplayOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StateProvinceIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Abbreviation {
            get {
                return this.AbbreviationField;
            }
            set {
                if ((object.ReferenceEquals(this.AbbreviationField, value) != true)) {
                    this.AbbreviationField = value;
                    this.RaisePropertyChanged("Abbreviation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CountryID {
            get {
                return this.CountryIDField;
            }
            set {
                if ((this.CountryIDField.Equals(value) != true)) {
                    this.CountryIDField = value;
                    this.RaisePropertyChanged("CountryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DisplayOrder {
            get {
                return this.DisplayOrderField;
            }
            set {
                if ((this.DisplayOrderField.Equals(value) != true)) {
                    this.DisplayOrderField = value;
                    this.RaisePropertyChanged("DisplayOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StateProvinceID {
            get {
                return this.StateProvinceIDField;
            }
            set {
                if ((this.StateProvinceIDField.Equals(value) != true)) {
                    this.StateProvinceIDField = value;
                    this.RaisePropertyChanged("StateProvinceID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="_CustomerProfile", Namespace="http://schemas.datacontract.org/2004/07/EdriveService.DataContract")]
    [System.SerializableAttribute()]
    public partial class _CustomerProfile : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApplicationURLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustomerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LogoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PageImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceURLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WarrantyURLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApplicationURL {
            get {
                return this.ApplicationURLField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationURLField, value) != true)) {
                    this.ApplicationURLField = value;
                    this.RaisePropertyChanged("ApplicationURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustomerID {
            get {
                return this.CustomerIDField;
            }
            set {
                if ((this.CustomerIDField.Equals(value) != true)) {
                    this.CustomerIDField = value;
                    this.RaisePropertyChanged("CustomerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Logo {
            get {
                return this.LogoField;
            }
            set {
                if ((object.ReferenceEquals(this.LogoField, value) != true)) {
                    this.LogoField = value;
                    this.RaisePropertyChanged("Logo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PageImage {
            get {
                return this.PageImageField;
            }
            set {
                if ((object.ReferenceEquals(this.PageImageField, value) != true)) {
                    this.PageImageField = value;
                    this.RaisePropertyChanged("PageImage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceURL {
            get {
                return this.ServiceURLField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceURLField, value) != true)) {
                    this.ServiceURLField = value;
                    this.RaisePropertyChanged("ServiceURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WarrantyURL {
            get {
                return this.WarrantyURLField;
            }
            set {
                if ((object.ReferenceEquals(this.WarrantyURLField, value) != true)) {
                    this.WarrantyURLField = value;
                    this.RaisePropertyChanged("WarrantyURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ED_Zipcodes", Namespace="http://schemas.datacontract.org/2004/07/EdriveService.DataContract")]
    [System.SerializableAttribute()]
    public partial class ED_Zipcodes : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double latitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double longitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string zip_codeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double latitude {
            get {
                return this.latitudeField;
            }
            set {
                if ((this.latitudeField.Equals(value) != true)) {
                    this.latitudeField = value;
                    this.RaisePropertyChanged("latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double longitude {
            get {
                return this.longitudeField;
            }
            set {
                if ((this.longitudeField.Equals(value) != true)) {
                    this.longitudeField = value;
                    this.RaisePropertyChanged("longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string zip_code {
            get {
                return this.zip_codeField;
            }
            set {
                if ((object.ReferenceEquals(this.zip_codeField, value) != true)) {
                    this.zip_codeField = value;
                    this.RaisePropertyChanged("zip_code");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="_SellerCount", Namespace="http://schemas.datacontract.org/2004/07/EdriveService.DataContract")]
    [System.SerializableAttribute()]
    public partial class _SellerCount : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long DealerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SellerField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Dealer {
            get {
                return this.DealerField;
            }
            set {
                if ((this.DealerField.Equals(value) != true)) {
                    this.DealerField = value;
                    this.RaisePropertyChanged("Dealer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Seller {
            get {
                return this.SellerField;
            }
            set {
                if ((this.SellerField.Equals(value) != true)) {
                    this.SellerField = value;
                    this.RaisePropertyChanged("Seller");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IntrestedCustomer", Namespace="http://schemas.datacontract.org/2004/07/EdriveService.DataContract")]
    [System.SerializableAttribute()]
    public partial class IntrestedCustomer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InterestedCustomerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool Trade_inField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string additionalCommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string contactTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime createdOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int customerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string emailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool finacingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string firstnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int intrestTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string lastnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string phonenoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool price_LockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int productIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime updateOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int zipcodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InterestedCustomerID {
            get {
                return this.InterestedCustomerIDField;
            }
            set {
                if ((this.InterestedCustomerIDField.Equals(value) != true)) {
                    this.InterestedCustomerIDField = value;
                    this.RaisePropertyChanged("InterestedCustomerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Trade_in {
            get {
                return this.Trade_inField;
            }
            set {
                if ((this.Trade_inField.Equals(value) != true)) {
                    this.Trade_inField = value;
                    this.RaisePropertyChanged("Trade_in");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string additionalComments {
            get {
                return this.additionalCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.additionalCommentsField, value) != true)) {
                    this.additionalCommentsField = value;
                    this.RaisePropertyChanged("additionalComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string contactType {
            get {
                return this.contactTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.contactTypeField, value) != true)) {
                    this.contactTypeField = value;
                    this.RaisePropertyChanged("contactType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime createdOn {
            get {
                return this.createdOnField;
            }
            set {
                if ((this.createdOnField.Equals(value) != true)) {
                    this.createdOnField = value;
                    this.RaisePropertyChanged("createdOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int customerId {
            get {
                return this.customerIdField;
            }
            set {
                if ((this.customerIdField.Equals(value) != true)) {
                    this.customerIdField = value;
                    this.RaisePropertyChanged("customerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string email {
            get {
                return this.emailField;
            }
            set {
                if ((object.ReferenceEquals(this.emailField, value) != true)) {
                    this.emailField = value;
                    this.RaisePropertyChanged("email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool finacing {
            get {
                return this.finacingField;
            }
            set {
                if ((this.finacingField.Equals(value) != true)) {
                    this.finacingField = value;
                    this.RaisePropertyChanged("finacing");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string firstname {
            get {
                return this.firstnameField;
            }
            set {
                if ((object.ReferenceEquals(this.firstnameField, value) != true)) {
                    this.firstnameField = value;
                    this.RaisePropertyChanged("firstname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int intrestType {
            get {
                return this.intrestTypeField;
            }
            set {
                if ((this.intrestTypeField.Equals(value) != true)) {
                    this.intrestTypeField = value;
                    this.RaisePropertyChanged("intrestType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string lastname {
            get {
                return this.lastnameField;
            }
            set {
                if ((object.ReferenceEquals(this.lastnameField, value) != true)) {
                    this.lastnameField = value;
                    this.RaisePropertyChanged("lastname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string phoneno {
            get {
                return this.phonenoField;
            }
            set {
                if ((object.ReferenceEquals(this.phonenoField, value) != true)) {
                    this.phonenoField = value;
                    this.RaisePropertyChanged("phoneno");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool price_Lock {
            get {
                return this.price_LockField;
            }
            set {
                if ((this.price_LockField.Equals(value) != true)) {
                    this.price_LockField = value;
                    this.RaisePropertyChanged("price_Lock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int productId {
            get {
                return this.productIdField;
            }
            set {
                if ((this.productIdField.Equals(value) != true)) {
                    this.productIdField = value;
                    this.RaisePropertyChanged("productId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime updateOn {
            get {
                return this.updateOnField;
            }
            set {
                if ((this.updateOnField.Equals(value) != true)) {
                    this.updateOnField = value;
                    this.RaisePropertyChanged("updateOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int zipcode {
            get {
                return this.zipcodeField;
            }
            set {
                if ((this.zipcodeField.Equals(value) != true)) {
                    this.zipcodeField = value;
                    this.RaisePropertyChanged("zipcode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AdvancedSearchAttributes", Namespace="http://schemas.datacontract.org/2004/07/EdriveService.DataContract")]
    [System.SerializableAttribute()]
    public partial class AdvancedSearchAttributes : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int _TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int _bodyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string _driveTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string _engineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int _makeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal _maxPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int _maxYearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int _mileageFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int _mileageToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal _minPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int _minYaerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int _modelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string _radiusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string _transmissionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string _vinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int _zipField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int _Type {
            get {
                return this._TypeField;
            }
            set {
                if ((this._TypeField.Equals(value) != true)) {
                    this._TypeField = value;
                    this.RaisePropertyChanged("_Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int _body {
            get {
                return this._bodyField;
            }
            set {
                if ((this._bodyField.Equals(value) != true)) {
                    this._bodyField = value;
                    this.RaisePropertyChanged("_body");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string _driveType {
            get {
                return this._driveTypeField;
            }
            set {
                if ((object.ReferenceEquals(this._driveTypeField, value) != true)) {
                    this._driveTypeField = value;
                    this.RaisePropertyChanged("_driveType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string _engine {
            get {
                return this._engineField;
            }
            set {
                if ((object.ReferenceEquals(this._engineField, value) != true)) {
                    this._engineField = value;
                    this.RaisePropertyChanged("_engine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int _make {
            get {
                return this._makeField;
            }
            set {
                if ((this._makeField.Equals(value) != true)) {
                    this._makeField = value;
                    this.RaisePropertyChanged("_make");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal _maxPrice {
            get {
                return this._maxPriceField;
            }
            set {
                if ((this._maxPriceField.Equals(value) != true)) {
                    this._maxPriceField = value;
                    this.RaisePropertyChanged("_maxPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int _maxYear {
            get {
                return this._maxYearField;
            }
            set {
                if ((this._maxYearField.Equals(value) != true)) {
                    this._maxYearField = value;
                    this.RaisePropertyChanged("_maxYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int _mileageFrom {
            get {
                return this._mileageFromField;
            }
            set {
                if ((this._mileageFromField.Equals(value) != true)) {
                    this._mileageFromField = value;
                    this.RaisePropertyChanged("_mileageFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int _mileageTo {
            get {
                return this._mileageToField;
            }
            set {
                if ((this._mileageToField.Equals(value) != true)) {
                    this._mileageToField = value;
                    this.RaisePropertyChanged("_mileageTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal _minPrice {
            get {
                return this._minPriceField;
            }
            set {
                if ((this._minPriceField.Equals(value) != true)) {
                    this._minPriceField = value;
                    this.RaisePropertyChanged("_minPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int _minYaer {
            get {
                return this._minYaerField;
            }
            set {
                if ((this._minYaerField.Equals(value) != true)) {
                    this._minYaerField = value;
                    this.RaisePropertyChanged("_minYaer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int _model {
            get {
                return this._modelField;
            }
            set {
                if ((this._modelField.Equals(value) != true)) {
                    this._modelField = value;
                    this.RaisePropertyChanged("_model");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string _radius {
            get {
                return this._radiusField;
            }
            set {
                if ((object.ReferenceEquals(this._radiusField, value) != true)) {
                    this._radiusField = value;
                    this.RaisePropertyChanged("_radius");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string _transmission {
            get {
                return this._transmissionField;
            }
            set {
                if ((object.ReferenceEquals(this._transmissionField, value) != true)) {
                    this._transmissionField = value;
                    this.RaisePropertyChanged("_transmission");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string _vin {
            get {
                return this._vinField;
            }
            set {
                if ((object.ReferenceEquals(this._vinField, value) != true)) {
                    this._vinField = value;
                    this.RaisePropertyChanged("_vin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int _zip {
            get {
                return this._zipField;
            }
            set {
                if ((this._zipField.Equals(value) != true)) {
                    this._zipField = value;
                    this.RaisePropertyChanged("_zip");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Product_Model", Namespace="http://schemas.datacontract.org/2004/07/EdriveService.DataContract")]
    [System.SerializableAttribute()]
    public partial class Product_Model : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int makeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string modelNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int makeID {
            get {
                return this.makeIDField;
            }
            set {
                if ((this.makeIDField.Equals(value) != true)) {
                    this.makeIDField = value;
                    this.RaisePropertyChanged("makeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string modelName {
            get {
                return this.modelNameField;
            }
            set {
                if ((object.ReferenceEquals(this.modelNameField, value) != true)) {
                    this.modelNameField = value;
                    this.RaisePropertyChanged("modelName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Product_Make", Namespace="http://schemas.datacontract.org/2004/07/EdriveService.DataContract")]
    [System.SerializableAttribute()]
    public partial class Product_Make : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string makeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string make {
            get {
                return this.makeField;
            }
            set {
                if ((object.ReferenceEquals(this.makeField, value) != true)) {
                    this.makeField = value;
                    this.RaisePropertyChanged("make");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Product_Type", Namespace="http://schemas.datacontract.org/2004/07/EdriveService.DataContract")]
    [System.SerializableAttribute()]
    public partial class Product_Type : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string typeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                if ((object.ReferenceEquals(this.typeField, value) != true)) {
                    this.typeField = value;
                    this.RaisePropertyChanged("type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Product_Body", Namespace="http://schemas.datacontract.org/2004/07/EdriveService.DataContract")]
    [System.SerializableAttribute()]
    public partial class Product_Body : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string bodyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string body {
            get {
                return this.bodyField;
            }
            set {
                if ((object.ReferenceEquals(this.bodyField, value) != true)) {
                    this.bodyField = value;
                    this.RaisePropertyChanged("body");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductOptions", Namespace="http://schemas.datacontract.org/2004/07/EdriveService.DataContract")]
    [System.SerializableAttribute()]
    public partial class ProductOptions : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OptionNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OptionName {
            get {
                return this.OptionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OptionNameField, value) != true)) {
                    this.OptionNameField = value;
                    this.RaisePropertyChanged("OptionName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Edrivie_Service_Ref.IEdrive_Service")]
    public interface IEdrive_Service {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEdrive_Service/GetDealerGUID", ReplyAction="http://tempuri.org/IEdrive_Service/GetDealerGUIDResponse")]
        string GetDealerGUID(int customerid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEdrive_Service/GetDealers", ReplyAction="http://tempuri.org/IEdrive_Service/GetDealersResponse")]
        System.Collections.Generic.List<Edrive.Edrivie_Service_Ref.Customer> GetDealers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEdrive_Service/GetDealers_for_ManageProoduct", ReplyAction="http://tempuri.org/IEdrive_Service/GetDealers_for_ManageProoductResponse")]
        System.Collections.Generic.List<Edrive.Edrivie_Service_Ref.Customer> GetDealers_for_ManageProoduct(int CountDownDays);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEdrive_Service/DeleteProduct", ReplyAction="http://tempuri.org/IEdrive_Service/DeleteProductResponse")]
        bool DeleteProduct(System.Collections.Generic.List<string> ProductIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEdrive_Service/Get_Count_SearchProduct_for_ManageProduct", ReplyAction="http://tempuri.org/IEdrive_Service/Get_Count_SearchProduct_for_ManageProductRespo" +
            "nse")]
        int Get_Count_SearchProduct_for_ManageProduct(string VIN, string Stock, int makeId, string _ComapnyName, string _DealerEmail, string RoleName, System.Nullable<bool> isOnlyFeatured);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEdrive_Service/ApproveProducts", ReplyAction="http://tempuri.org/IEdrive_Service/ApproveProductsResponse")]
        bool ApproveProducts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEdrive_Service/QualifyPriceofProduct", ReplyAction="http://tempuri.org/IEdrive_Service/QualifyPriceofProductResponse")]
        bool QualifyPriceofProduct(System.Collections.Generic.List<string> ProductIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEdrive_Service/GetProductPicture_By_ProductID", ReplyAction="http://tempuri.org/IEdrive_Service/GetProductPicture_By_ProductIDResponse")]
        System.Collections.Generic.List<Edrive.Edrivie_Service_Ref.Product_Picture> GetProductPicture_By_ProductID(int ProductID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEdrive_Service/UpdateProduct", ReplyAction="http://tempuri.org/IEdrive_Service/UpdateProductResponse")]
        Edrive.Edrivie_Service_Ref.Products UpdateProduct(out bool status, Edrive.Edrivie_Service_Ref.Products Prd, ref string Msg, System.Collections.Generic.List<string> OptionsID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEdrive_Service/Update_Product_Picture", ReplyAction="http://tempuri.org/IEdrive_Service/Update_Product_PictureResponse")]
        bool Update_Product_Picture(ref System.Collections.Generic.List<Edrive.Edrivie_Service_Ref.Product_Picture> Pictures, out string Msg, int ProductID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEdrive_Service/GetCountry", ReplyAction="http://tempuri.org/IEdrive_Service/GetCountryResponse")]
        System.Collections.Generic.List<Edrive.Edrivie_Service_Ref.Country> GetCountry();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEdrive_Service/GetStateByCountry", ReplyAction="http://tempuri.org/IEdrive_Service/GetStateByCountryResponse")]
        System.Collections.Generic.List<Edrive.Edrivie_Service_Ref.State> GetStateByCountry(int CountryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEdrive_Service/GetState_Detail_By_StateID", ReplyAction="http://tempuri.org/IEdrive_Service/GetState_Detail_By_StateIDResponse")]
        Edrive.Edrivie_Service_Ref.State GetState_Detail_By_StateID(int StateID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEdrive_Service/MakeDealer_as_FeaturedDealer", ReplyAction="http://tempuri.org/IEdrive_Service/MakeDealer_as_FeaturedDealerResponse")]
        bool MakeDealer_as_FeaturedDealer(out string Msg, int DealerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEdrive_Service/Get_Dealers_FeaturedVehicle", ReplyAction="http://tempuri.org/IEdrive_Service/Get_Dealers_FeaturedVehicleResponse")]
        System.Collections.Generic.List<Edrive.Edrivie_Service_Ref.Products> Get_Dealers_FeaturedVehicle(int rec_to_return);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEdrive_Service/AddDealer", ReplyAction="http://tempuri.org/IEdrive_Service/AddDealerResponse")]
        bool AddDealer(Edrive.Edrivie_Service_Ref.Customer cust, ref string Msg, Edrive.Edrivie_Service_Ref._CustomerProfile Profile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEdrive_Service/UpdatePassword_for_Dealer", ReplyAction="http://tempuri.org/IEdrive_Service/UpdatePassword_for_DealerResponse")]
        bool UpdatePassword_for_Dealer(out string Msg, int _DealerId, string Pwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEdrive_Service/Update_Dealer", ReplyAction="http://tempuri.org/IEdrive_Service/Update_DealerResponse")]
        bool Update_Dealer(Edrive.Edrivie_Service_Ref.Customer cust, ref string Msg, Edrive.Edrivie_Service_Ref._CustomerProfile Profile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEdrive_Service/GetDealersByZip", ReplyAction="http://tempuri.org/IEdrive_Service/GetDealersByZipResponse")]
        System.Collections.Generic.List<Edrive.Edrivie_Service_Ref.Customer> GetDealersByZip(string zipcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEdrive_Service/UpdateAdmin_InfoDetails", ReplyAction="http://tempuri.org/IEdrive_Service/UpdateAdmin_InfoDetailsResponse")]
        bool UpdateAdmin_InfoDetails(Edrive.Edrivie_Service_Ref.Customer cust, ref string Msg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEdrive_Service/Update_Dealer_Personal_Details", ReplyAction="http://tempuri.org/IEdrive_Service/Update_Dealer_Personal_DetailsResponse")]
        bool Update_Dealer_Personal_Details(out string Msg, Edrive.Edrivie_Service_Ref.Customer _customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEdrive_Service/GetED_ZipCodes", ReplyAction="http://tempuri.org/IEdrive_Service/GetED_ZipCodesResponse")]
        Edrive.Edrivie_Service_Ref.ED_Zipcodes GetED_ZipCodes(string ZipCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEdrive_Service/GetHotSheet", ReplyAction="http://tempuri.org/IEdrive_Service/GetHotSheetResponse")]
        System.Collections.Generic.List<Edrive.Edrivie_Service_Ref.Products> GetHotSheet(out int CarsCount, System.Nullable<double> latitude, System.Nullable<double> longitude, double NewLatitude, double NewLongitude, int makeID, string Zipcode, int pageIndex, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEdrive_Service/Authenticate_Dealer_or_Admin", ReplyAction="http://tempuri.org/IEdrive_Service/Authenticate_Dealer_or_AdminResponse")]
        bool Authenticate_Dealer_or_Admin(string UserName, string Password, string RoleName, ref Edrive.Edrivie_Service_Ref.Customer customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEdrive_Service/GetDealerByDealerEmail", ReplyAction="http://tempuri.org/IEdrive_Service/GetDealerByDealerEmailResponse")]
        Edrive.Edrivie_Service_Ref.Customer GetDealerByDealerEmail(string Email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEdrive_Service/GetDealerByDealerID", ReplyAction="http://tempuri.org/IEdrive_Service/GetDealerByDealerIDResponse")]
        Edrive.Edrivie_Service_Ref.Customer GetDealerByDealerID(System.Nullable<int> CustomerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEdrive_Service/GetDealer_Profile_ByDealerID", ReplyAction="http://tempuri.org/IEdrive_Service/GetDealer_Profile_ByDealerIDResponse")]
        Edrive.Edrivie_Service_Ref._CustomerProfile GetDealer_Profile_ByDealerID(System.Nullable<int> CustomerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEdrive_Service/GetSellerCount_for_HotSheet", ReplyAction="http://tempuri.org/IEdrive_Service/GetSellerCount_for_HotSheetResponse")]
        Edrive.Edrivie_Service_Ref._SellerCount GetSellerCount_for_HotSheet(string zip, System.Nullable<int> Make, System.Nullable<double> lat1, System.Nullable<double> lat2, System.Nullable<double> long1, System.Nullable<double> long2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEdrive_Service/SearchDealer_For_ManagDealerSection", ReplyAction="http://tempuri.org/IEdrive_Service/SearchDealer_For_ManagDealerSectionResponse")]
        System.Collections.Generic.List<Edrive.Edrivie_Service_Ref.Customer> SearchDealer_For_ManagDealerSection(out int CarsCount, string CompanyName, string CompanyName2, string Email, string LastName, string Name, System.Nullable<System.DateTime> RegFrom, System.Nullable<System.DateTime> RegTo, int pageIndex, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEdrive_Service/IsDealerExists", ReplyAction="http://tempuri.org/IEdrive_Service/IsDealerExistsResponse")]
        bool IsDealerExists(string Email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEdrive_Service/Is_other_DealerExist_for_same_email", ReplyAction="http://tempuri.org/IEdrive_Service/Is_other_DealerExist_for_same_emailResponse")]
        bool Is_other_DealerExist_for_same_email(string Email, int currrent_CustomerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEdrive_Service/IntrestedCustomer", ReplyAction="http://tempuri.org/IEdrive_Service/IntrestedCustomerResponse")]
        bool IntrestedCustomer(Edrive.Edrivie_Service_Ref.IntrestedCustomer _customer, int _productid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEdrive_Service/Delete_Dealer", ReplyAction="http://tempuri.org/IEdrive_Service/Delete_DealerResponse")]
        bool Delete_Dealer(int CustomerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEdrive_Service/Delete_Dealer_Profile_PageImage", ReplyAction="http://tempuri.org/IEdrive_Service/Delete_Dealer_Profile_PageImageResponse")]
        bool Delete_Dealer_Profile_PageImage(out string Msg, int CustomerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEdrive_Service/Delete_Dealer_Profile_Logo", ReplyAction="http://tempuri.org/IEdrive_Service/Delete_Dealer_Profile_LogoResponse")]
        bool Delete_Dealer_Profile_Logo(out string Msg, int CustomerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEdrive_Service/SearchProductBy_Make_Model_City_Zip", ReplyAction="http://tempuri.org/IEdrive_Service/SearchProductBy_Make_Model_City_ZipResponse")]
        System.Collections.Generic.List<Edrive.Edrivie_Service_Ref.Products> SearchProductBy_Make_Model_City_Zip(
                    string searchKey, 
                    int pageSize, 
                    int pageIndex, 
                    ref System.Nullable<int> CarsCount, 
                    string SortByColumn, 
                    ref string Price, 
                    ref string Milage, 
                    ref string Make, 
                    ref string ModelID, 
                    ref string Year, 
                    ref string Body, 
                    ref string Type, 
                    int Zip, 
                    System.Nullable<int> radius, 
                    string Warranty, 
                    ref string Vin, 
                    string Transmission, 
                    string Engine, 
                    ref string DriveType, 
                    bool isSearchByDealer, 
                    int SearchByDealerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEdrive_Service/SearchProductBy_Make_Model_City_Zip_Count", ReplyAction="http://tempuri.org/IEdrive_Service/SearchProductBy_Make_Model_City_Zip_CountRespo" +
            "nse")]
        void SearchProductBy_Make_Model_City_Zip_Count(
                    string searchKey, 
                    int pageSize, 
                    int pageIndex, 
                    ref System.Nullable<int> CarsCount, 
                    string SortByColumn, 
                    ref string Price, 
                    ref string Milage, 
                    ref string Make, 
                    ref string ModelID, 
                    ref string Year, 
                    ref string Body, 
                    ref string Type, 
                    int Zip, 
                    System.Nullable<int> radius, 
                    string Warranty, 
                    ref string Vin, 
                    string Transmission, 
                    string Engine, 
                    ref string DriveType, 
                    bool isSearchByDealer, 
                    int SearchByDealerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEdrive_Service/Get_TotalVehicles_Count", ReplyAction="http://tempuri.org/IEdrive_Service/Get_TotalVehicles_CountResponse")]
        int Get_TotalVehicles_Count();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEdrive_Service/Get_TotalDealers_Count", ReplyAction="http://tempuri.org/IEdrive_Service/Get_TotalDealers_CountResponse")]
        int Get_TotalDealers_Count();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEdrive_Service/Get_InterestedCustomer", ReplyAction="http://tempuri.org/IEdrive_Service/Get_InterestedCustomerResponse")]
        System.Collections.Generic.List<Edrive.Edrivie_Service_Ref.IntrestedCustomer> Get_InterestedCustomer(int InterestType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEdrive_Service/Delete_InterestedCustomer", ReplyAction="http://tempuri.org/IEdrive_Service/Delete_InterestedCustomerResponse")]
        bool Delete_InterestedCustomer(out string Msg, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEdrive_Service/SearchCars_for_home_Page", ReplyAction="http://tempuri.org/IEdrive_Service/SearchCars_for_home_PageResponse")]
        System.Collections.Generic.List<Edrive.Edrivie_Service_Ref.Products> SearchCars_for_home_Page(string searchKey, int Counts_to_ret);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEdrive_Service/UploadOnCarfax", ReplyAction="http://tempuri.org/IEdrive_Service/UploadOnCarfaxResponse")]
        void UploadOnCarfax();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEdrive_Service/DownloadFromCarfax", ReplyAction="http://tempuri.org/IEdrive_Service/DownloadFromCarfaxResponse")]
        void DownloadFromCarfax();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEdrive_Service/Data_Import_Update", ReplyAction="http://tempuri.org/IEdrive_Service/Data_Import_UpdateResponse")]
        string Data_Import_Update(string csvFilePath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEdrive_Service/GetDataFromAutoBase", ReplyAction="http://tempuri.org/IEdrive_Service/GetDataFromAutoBaseResponse")]
        string GetDataFromAutoBase();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEdrive_Service/GetDataFromGetAuto", ReplyAction="http://tempuri.org/IEdrive_Service/GetDataFromGetAutoResponse")]
        string GetDataFromGetAuto();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEdrive_Service/GetDataFromSchumacher", ReplyAction="http://tempuri.org/IEdrive_Service/GetDataFromSchumacherResponse")]
        string GetDataFromSchumacher();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEdrive_Service/GetDataFromAULtec", ReplyAction="http://tempuri.org/IEdrive_Service/GetDataFromAULtecResponse")]
        string GetDataFromAULtec();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEdrive_Service/SearchCars_Count", ReplyAction="http://tempuri.org/IEdrive_Service/SearchCars_CountResponse")]
        int SearchCars_Count(
                    string Price, 
                    string Milage, 
                    string Make, 
                    string ModelID, 
                    string Year, 
                    string Body, 
                    string Type, 
                    int Zip, 
                    string Warranty, 
                    string Vin, 
                    string Transmission, 
                    string Engine, 
                    string DriveType, 
                    string sortByColumn, 
                    int pageSize, 
                    int pageIndex);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEdrive_Service/SearchCars", ReplyAction="http://tempuri.org/IEdrive_Service/SearchCarsResponse")]
        System.Collections.Generic.List<Edrive.Edrivie_Service_Ref.Products> SearchCars(
                    string Price, 
                    string Milage, 
                    string Make, 
                    string ModelID, 
                    string Year, 
                    string Body, 
                    string Type, 
                    int Zip, 
                    string Warranty, 
                    string Vin, 
                    string Transmission, 
                    string Engine, 
                    string DriveType, 
                    string sortByColumn, 
                    int pageSize, 
                    int pageIndex, 
                    ref System.Nullable<int> CarsCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEdrive_Service/searchProduct", ReplyAction="http://tempuri.org/IEdrive_Service/searchProductResponse")]
        System.Collections.Generic.List<Edrive.Edrivie_Service_Ref.Products> searchProduct(int makeID, int modelId, string zipCode, int pageSize, int pageIndex, ref System.Nullable<int> CarsCount, string SortByColumn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEdrive_Service/Qualify_All_Products", ReplyAction="http://tempuri.org/IEdrive_Service/Qualify_All_ProductsResponse")]
        void Qualify_All_Products();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEdrive_Service/Qualify_All_Products_to_RecoverDeletedProducts" +
            "", ReplyAction="http://tempuri.org/IEdrive_Service/Qualify_All_Products_to_RecoverDeletedProducts" +
            "Response")]
        void Qualify_All_Products_to_RecoverDeletedProducts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEdrive_Service/AddProductUsingNadaService", ReplyAction="http://tempuri.org/IEdrive_Service/AddProductUsingNadaServiceResponse")]
        bool AddProductUsingNadaService(string VIN, string Condition, int mileage, int SellerZip, string SellerEmail, string SellerName, string SellerNotes, string Phone, bool Offer, ref string Msg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEdrive_Service/AddProduct", ReplyAction="http://tempuri.org/IEdrive_Service/AddProductResponse")]
        Edrive.Edrivie_Service_Ref.Products AddProduct(out bool status, Edrive.Edrivie_Service_Ref.Products Prd, ref string Msg, System.Collections.Generic.List<string> OptionsID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEdrive_Service/GetProductRating", ReplyAction="http://tempuri.org/IEdrive_Service/GetProductRatingResponse")]
        int GetProductRating(int productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEdrive_Service/AddProductRating", ReplyAction="http://tempuri.org/IEdrive_Service/AddProductRatingResponse")]
        bool AddProductRating(out string Msg, int id, int score, string p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEdrive_Service/AddProductPicture", ReplyAction="http://tempuri.org/IEdrive_Service/AddProductPictureResponse")]
        void AddProductPicture(int ProductId, string fileName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEdrive_Service/GetAdvancedSearchProducts_Count", ReplyAction="http://tempuri.org/IEdrive_Service/GetAdvancedSearchProducts_CountResponse")]
        int GetAdvancedSearchProducts_Count(Edrive.Edrivie_Service_Ref.AdvancedSearchAttributes _attributes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEdrive_Service/GetAdvancedSearchProducts", ReplyAction="http://tempuri.org/IEdrive_Service/GetAdvancedSearchProductsResponse")]
        System.Collections.Generic.List<Edrive.Edrivie_Service_Ref.Products> GetAdvancedSearchProducts(Edrive.Edrivie_Service_Ref.AdvancedSearchAttributes _attributes, int pageSize, int pageIndex, string SortByColumn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEdrive_Service/BindDriveType", ReplyAction="http://tempuri.org/IEdrive_Service/BindDriveTypeResponse")]
        System.Collections.Generic.List<string> BindDriveType();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEdrive_Service/BindModel", ReplyAction="http://tempuri.org/IEdrive_Service/BindModelResponse")]
        System.Collections.Generic.List<Edrive.Edrivie_Service_Ref.Product_Model> BindModel(int makeid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEdrive_Service/BindMake", ReplyAction="http://tempuri.org/IEdrive_Service/BindMakeResponse")]
        System.Collections.Generic.List<Edrive.Edrivie_Service_Ref.Product_Make> BindMake();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEdrive_Service/bindMakeAttributes", ReplyAction="http://tempuri.org/IEdrive_Service/bindMakeAttributesResponse")]
        System.Collections.Generic.List<Edrive.Edrivie_Service_Ref.Product_Make> bindMakeAttributes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEdrive_Service/bindtypeAttributes", ReplyAction="http://tempuri.org/IEdrive_Service/bindtypeAttributesResponse")]
        System.Collections.Generic.List<Edrive.Edrivie_Service_Ref.Product_Type> bindtypeAttributes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEdrive_Service/BindBodyType", ReplyAction="http://tempuri.org/IEdrive_Service/BindBodyTypeResponse")]
        System.Collections.Generic.List<Edrive.Edrivie_Service_Ref.Product_Body> BindBodyType();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEdrive_Service/GetTransmission", ReplyAction="http://tempuri.org/IEdrive_Service/GetTransmissionResponse")]
        System.Collections.Generic.List<Edrive.Edrivie_Service_Ref.Products> GetTransmission();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEdrive_Service/GetEngine", ReplyAction="http://tempuri.org/IEdrive_Service/GetEngineResponse")]
        System.Collections.Generic.List<Edrive.Edrivie_Service_Ref.Products> GetEngine();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEdrive_Service/GetProductByID", ReplyAction="http://tempuri.org/IEdrive_Service/GetProductByIDResponse")]
        Edrive.Edrivie_Service_Ref.Products GetProductByID(int ProductID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEdrive_Service/GetProductByIDs", ReplyAction="http://tempuri.org/IEdrive_Service/GetProductByIDsResponse")]
        System.Collections.Generic.List<Edrive.Edrivie_Service_Ref.Products> GetProductByIDs(System.Collections.Generic.List<int> productIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEdrive_Service/Get_FeaturedVehicles", ReplyAction="http://tempuri.org/IEdrive_Service/Get_FeaturedVehiclesResponse")]
        System.Collections.Generic.List<Edrive.Edrivie_Service_Ref.Products> Get_FeaturedVehicles(int VehCounts);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEdrive_Service/IsProductExist_by_VIN", ReplyAction="http://tempuri.org/IEdrive_Service/IsProductExist_by_VINResponse")]
        bool IsProductExist_by_VIN(string Vin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEdrive_Service/IsProductExist_by_VIN_for_other_vehicle", ReplyAction="http://tempuri.org/IEdrive_Service/IsProductExist_by_VIN_for_other_vehicleRespons" +
            "e")]
        bool IsProductExist_by_VIN_for_other_vehicle(string Vin, int ProductID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEdrive_Service/GetProductsByDealerID", ReplyAction="http://tempuri.org/IEdrive_Service/GetProductsByDealerIDResponse")]
        System.Collections.Generic.List<Edrive.Edrivie_Service_Ref.Products> GetProductsByDealerID(int DealerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEdrive_Service/AddProductOptions", ReplyAction="http://tempuri.org/IEdrive_Service/AddProductOptionsResponse")]
        void AddProductOptions(string OPTIONS, int ProductID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEdrive_Service/GetAllProductOptions", ReplyAction="http://tempuri.org/IEdrive_Service/GetAllProductOptionsResponse")]
        System.Collections.Generic.List<Edrive.Edrivie_Service_Ref.ProductOptions> GetAllProductOptions();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEdrive_Service/GetAllProductOptions_By_ProductID", ReplyAction="http://tempuri.org/IEdrive_Service/GetAllProductOptions_By_ProductIDResponse")]
        System.Collections.Generic.List<Edrive.Edrivie_Service_Ref.ProductOptions> GetAllProductOptions_By_ProductID(int ProductID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEdrive_Service/AddPicsToProduct", ReplyAction="http://tempuri.org/IEdrive_Service/AddPicsToProductResponse")]
        void AddPicsToProduct(System.Collections.Generic.List<string> Pics, int ProductID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEdrive_Service/GetMakeById", ReplyAction="http://tempuri.org/IEdrive_Service/GetMakeByIdResponse")]
        Edrive.Edrivie_Service_Ref.Product_Make GetMakeById(int makeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEdrive_Service/GetBodybyId", ReplyAction="http://tempuri.org/IEdrive_Service/GetBodybyIdResponse")]
        Edrive.Edrivie_Service_Ref.Product_Body GetBodybyId(int bodyid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEdrive_Service/GetModelbyId", ReplyAction="http://tempuri.org/IEdrive_Service/GetModelbyIdResponse")]
        Edrive.Edrivie_Service_Ref.Product_Model GetModelbyId(int ModelID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEdrive_Service/GetDealerbyProductID", ReplyAction="http://tempuri.org/IEdrive_Service/GetDealerbyProductIDResponse")]
        Edrive.Edrivie_Service_Ref.Customer GetDealerbyProductID(int ProductID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEdrive_Service/SearchProduct_for_ManageProduct", ReplyAction="http://tempuri.org/IEdrive_Service/SearchProduct_for_ManageProductResponse")]
        System.Collections.Generic.List<Edrive.Edrivie_Service_Ref.Products> SearchProduct_for_ManageProduct(string VIN, string Stock, int makeId, string _ComapnyName, string _DealerEmail, string RoleName, System.Nullable<bool> isOnlyFeatured, int pageIndex, int pageSize, ref int CarsCount);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEdrive_ServiceChannel : Edrive.Edrivie_Service_Ref.IEdrive_Service, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Edrive_ServiceClient : System.ServiceModel.ClientBase<Edrive.Edrivie_Service_Ref.IEdrive_Service>, Edrive.Edrivie_Service_Ref.IEdrive_Service {
        
        public Edrive_ServiceClient() {
        }
        
        public Edrive_ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Edrive_ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Edrive_ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Edrive_ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetDealerGUID(int customerid) {
            return base.Channel.GetDealerGUID(customerid);
        }
        
        public System.Collections.Generic.List<Edrive.Edrivie_Service_Ref.Customer> GetDealers() {
            return base.Channel.GetDealers();
        }
        
        public System.Collections.Generic.List<Edrive.Edrivie_Service_Ref.Customer> GetDealers_for_ManageProoduct(int CountDownDays) {
            return base.Channel.GetDealers_for_ManageProoduct(CountDownDays);
        }
        
        public bool DeleteProduct(System.Collections.Generic.List<string> ProductIDs) {
            return base.Channel.DeleteProduct(ProductIDs);
        }
        
        public int Get_Count_SearchProduct_for_ManageProduct(string VIN, string Stock, int makeId, string _ComapnyName, string _DealerEmail, string RoleName, System.Nullable<bool> isOnlyFeatured) {
            return base.Channel.Get_Count_SearchProduct_for_ManageProduct(VIN, Stock, makeId, _ComapnyName, _DealerEmail, RoleName, isOnlyFeatured);
        }
        
        public bool ApproveProducts() {
            return base.Channel.ApproveProducts();
        }
        
        public bool QualifyPriceofProduct(System.Collections.Generic.List<string> ProductIDs) {
            return base.Channel.QualifyPriceofProduct(ProductIDs);
        }
        
        public System.Collections.Generic.List<Edrive.Edrivie_Service_Ref.Product_Picture> GetProductPicture_By_ProductID(int ProductID) {
            return base.Channel.GetProductPicture_By_ProductID(ProductID);
        }
        
        public Edrive.Edrivie_Service_Ref.Products UpdateProduct(out bool status, Edrive.Edrivie_Service_Ref.Products Prd, ref string Msg, System.Collections.Generic.List<string> OptionsID) {
            return base.Channel.UpdateProduct(out status, Prd, ref Msg, OptionsID);
        }
        
        public bool Update_Product_Picture(ref System.Collections.Generic.List<Edrive.Edrivie_Service_Ref.Product_Picture> Pictures, out string Msg, int ProductID) {
            return base.Channel.Update_Product_Picture(ref Pictures, out Msg, ProductID);
        }
        
        public System.Collections.Generic.List<Edrive.Edrivie_Service_Ref.Country> GetCountry() {
            return base.Channel.GetCountry();
        }
        
        public System.Collections.Generic.List<Edrive.Edrivie_Service_Ref.State> GetStateByCountry(int CountryID) {
            return base.Channel.GetStateByCountry(CountryID);
        }
        
        public Edrive.Edrivie_Service_Ref.State GetState_Detail_By_StateID(int StateID) {
            return base.Channel.GetState_Detail_By_StateID(StateID);
        }
        
        public bool MakeDealer_as_FeaturedDealer(out string Msg, int DealerId) {
            return base.Channel.MakeDealer_as_FeaturedDealer(out Msg, DealerId);
        }
        
        public System.Collections.Generic.List<Edrive.Edrivie_Service_Ref.Products> Get_Dealers_FeaturedVehicle(int rec_to_return) {
            return base.Channel.Get_Dealers_FeaturedVehicle(rec_to_return);
        }
        
        public bool AddDealer(Edrive.Edrivie_Service_Ref.Customer cust, ref string Msg, Edrive.Edrivie_Service_Ref._CustomerProfile Profile) {
            return base.Channel.AddDealer(cust, ref Msg, Profile);
        }
        
        public bool UpdatePassword_for_Dealer(out string Msg, int _DealerId, string Pwd) {
            return base.Channel.UpdatePassword_for_Dealer(out Msg, _DealerId, Pwd);
        }
        
        public bool Update_Dealer(Edrive.Edrivie_Service_Ref.Customer cust, ref string Msg, Edrive.Edrivie_Service_Ref._CustomerProfile Profile) {
            return base.Channel.Update_Dealer(cust, ref Msg, Profile);
        }
        
        public System.Collections.Generic.List<Edrive.Edrivie_Service_Ref.Customer> GetDealersByZip(string zipcode) {
            return base.Channel.GetDealersByZip(zipcode);
        }
        
        public bool UpdateAdmin_InfoDetails(Edrive.Edrivie_Service_Ref.Customer cust, ref string Msg) {
            return base.Channel.UpdateAdmin_InfoDetails(cust, ref Msg);
        }
        
        public bool Update_Dealer_Personal_Details(out string Msg, Edrive.Edrivie_Service_Ref.Customer _customer) {
            return base.Channel.Update_Dealer_Personal_Details(out Msg, _customer);
        }
        
        public Edrive.Edrivie_Service_Ref.ED_Zipcodes GetED_ZipCodes(string ZipCode) {
            return base.Channel.GetED_ZipCodes(ZipCode);
        }
        
        public System.Collections.Generic.List<Edrive.Edrivie_Service_Ref.Products> GetHotSheet(out int CarsCount, System.Nullable<double> latitude, System.Nullable<double> longitude, double NewLatitude, double NewLongitude, int makeID, string Zipcode, int pageIndex, int pageSize) {
            return base.Channel.GetHotSheet(out CarsCount, latitude, longitude, NewLatitude, NewLongitude, makeID, Zipcode, pageIndex, pageSize);
        }
        
        public bool Authenticate_Dealer_or_Admin(string UserName, string Password, string RoleName, ref Edrive.Edrivie_Service_Ref.Customer customer) {
            return base.Channel.Authenticate_Dealer_or_Admin(UserName, Password, RoleName, ref customer);
        }
        
        public Edrive.Edrivie_Service_Ref.Customer GetDealerByDealerEmail(string Email) {
            return base.Channel.GetDealerByDealerEmail(Email);
        }
        
        public Edrive.Edrivie_Service_Ref.Customer GetDealerByDealerID(System.Nullable<int> CustomerID) {
            return base.Channel.GetDealerByDealerID(CustomerID);
        }
        
        public Edrive.Edrivie_Service_Ref._CustomerProfile GetDealer_Profile_ByDealerID(System.Nullable<int> CustomerID) {
            return base.Channel.GetDealer_Profile_ByDealerID(CustomerID);
        }
        
        public Edrive.Edrivie_Service_Ref._SellerCount GetSellerCount_for_HotSheet(string zip, System.Nullable<int> Make, System.Nullable<double> lat1, System.Nullable<double> lat2, System.Nullable<double> long1, System.Nullable<double> long2) {
            return base.Channel.GetSellerCount_for_HotSheet(zip, Make, lat1, lat2, long1, long2);
        }
        
        public System.Collections.Generic.List<Edrive.Edrivie_Service_Ref.Customer> SearchDealer_For_ManagDealerSection(out int CarsCount, string CompanyName, string CompanyName2, string Email, string LastName, string Name, System.Nullable<System.DateTime> RegFrom, System.Nullable<System.DateTime> RegTo, int pageIndex, int pageSize) {
            return base.Channel.SearchDealer_For_ManagDealerSection(out CarsCount, CompanyName, CompanyName2, Email, LastName, Name, RegFrom, RegTo, pageIndex, pageSize);
        }
        
        public bool IsDealerExists(string Email) {
            return base.Channel.IsDealerExists(Email);
        }
        
        public bool Is_other_DealerExist_for_same_email(string Email, int currrent_CustomerId) {
            return base.Channel.Is_other_DealerExist_for_same_email(Email, currrent_CustomerId);
        }
        
        public bool IntrestedCustomer(Edrive.Edrivie_Service_Ref.IntrestedCustomer _customer, int _productid) {
            return base.Channel.IntrestedCustomer(_customer, _productid);
        }
        
        public bool Delete_Dealer(int CustomerID) {
            return base.Channel.Delete_Dealer(CustomerID);
        }
        
        public bool Delete_Dealer_Profile_PageImage(out string Msg, int CustomerID) {
            return base.Channel.Delete_Dealer_Profile_PageImage(out Msg, CustomerID);
        }
        
        public bool Delete_Dealer_Profile_Logo(out string Msg, int CustomerID) {
            return base.Channel.Delete_Dealer_Profile_Logo(out Msg, CustomerID);
        }
        
        public System.Collections.Generic.List<Edrive.Edrivie_Service_Ref.Products> SearchProductBy_Make_Model_City_Zip(
                    string searchKey, 
                    int pageSize, 
                    int pageIndex, 
                    ref System.Nullable<int> CarsCount, 
                    string SortByColumn, 
                    ref string Price, 
                    ref string Milage, 
                    ref string Make, 
                    ref string ModelID, 
                    ref string Year, 
                    ref string Body, 
                    ref string Type, 
                    int Zip, 
                    System.Nullable<int> radius, 
                    string Warranty, 
                    ref string Vin, 
                    string Transmission, 
                    string Engine, 
                    ref string DriveType, 
                    bool isSearchByDealer, 
                    int SearchByDealerID) {
            return base.Channel.SearchProductBy_Make_Model_City_Zip(searchKey, pageSize, pageIndex, ref CarsCount, SortByColumn, ref Price, ref Milage, ref Make, ref ModelID, ref Year, ref Body, ref Type, Zip, radius, Warranty, ref Vin, Transmission, Engine, ref DriveType, isSearchByDealer, SearchByDealerID);
        }
        
        public void SearchProductBy_Make_Model_City_Zip_Count(
                    string searchKey, 
                    int pageSize, 
                    int pageIndex, 
                    ref System.Nullable<int> CarsCount, 
                    string SortByColumn, 
                    ref string Price, 
                    ref string Milage, 
                    ref string Make, 
                    ref string ModelID, 
                    ref string Year, 
                    ref string Body, 
                    ref string Type, 
                    int Zip, 
                    System.Nullable<int> radius, 
                    string Warranty, 
                    ref string Vin, 
                    string Transmission, 
                    string Engine, 
                    ref string DriveType, 
                    bool isSearchByDealer, 
                    int SearchByDealerID) {
            base.Channel.SearchProductBy_Make_Model_City_Zip_Count(searchKey, pageSize, pageIndex, ref CarsCount, SortByColumn, ref Price, ref Milage, ref Make, ref ModelID, ref Year, ref Body, ref Type, Zip, radius, Warranty, ref Vin, Transmission, Engine, ref DriveType, isSearchByDealer, SearchByDealerID);
        }
        
        public int Get_TotalVehicles_Count() {
            return base.Channel.Get_TotalVehicles_Count();
        }
        
        public int Get_TotalDealers_Count() {
            return base.Channel.Get_TotalDealers_Count();
        }
        
        public System.Collections.Generic.List<Edrive.Edrivie_Service_Ref.IntrestedCustomer> Get_InterestedCustomer(int InterestType) {
            return base.Channel.Get_InterestedCustomer(InterestType);
        }
        
        public bool Delete_InterestedCustomer(out string Msg, int id) {
            return base.Channel.Delete_InterestedCustomer(out Msg, id);
        }
        
        public System.Collections.Generic.List<Edrive.Edrivie_Service_Ref.Products> SearchCars_for_home_Page(string searchKey, int Counts_to_ret) {
            return base.Channel.SearchCars_for_home_Page(searchKey, Counts_to_ret);
        }
        
        public void UploadOnCarfax() {
            base.Channel.UploadOnCarfax();
        }
        
        public void DownloadFromCarfax() {
            base.Channel.DownloadFromCarfax();
        }
        
        public string Data_Import_Update(string csvFilePath) {
            return base.Channel.Data_Import_Update(csvFilePath);
        }
        
        public string GetDataFromAutoBase() {
            return base.Channel.GetDataFromAutoBase();
        }
        
        public string GetDataFromGetAuto() {
            return base.Channel.GetDataFromGetAuto();
        }
        
        public string GetDataFromSchumacher() {
            return base.Channel.GetDataFromSchumacher();
        }
        
        public string GetDataFromAULtec() {
            return base.Channel.GetDataFromAULtec();
        }
        
        public int SearchCars_Count(
                    string Price, 
                    string Milage, 
                    string Make, 
                    string ModelID, 
                    string Year, 
                    string Body, 
                    string Type, 
                    int Zip, 
                    string Warranty, 
                    string Vin, 
                    string Transmission, 
                    string Engine, 
                    string DriveType, 
                    string sortByColumn, 
                    int pageSize, 
                    int pageIndex) {
            return base.Channel.SearchCars_Count(Price, Milage, Make, ModelID, Year, Body, Type, Zip, Warranty, Vin, Transmission, Engine, DriveType, sortByColumn, pageSize, pageIndex);
        }
        
        public System.Collections.Generic.List<Edrive.Edrivie_Service_Ref.Products> SearchCars(
                    string Price, 
                    string Milage, 
                    string Make, 
                    string ModelID, 
                    string Year, 
                    string Body, 
                    string Type, 
                    int Zip, 
                    string Warranty, 
                    string Vin, 
                    string Transmission, 
                    string Engine, 
                    string DriveType, 
                    string sortByColumn, 
                    int pageSize, 
                    int pageIndex, 
                    ref System.Nullable<int> CarsCount) {
            return base.Channel.SearchCars(Price, Milage, Make, ModelID, Year, Body, Type, Zip, Warranty, Vin, Transmission, Engine, DriveType, sortByColumn, pageSize, pageIndex, ref CarsCount);
        }
        
        public System.Collections.Generic.List<Edrive.Edrivie_Service_Ref.Products> searchProduct(int makeID, int modelId, string zipCode, int pageSize, int pageIndex, ref System.Nullable<int> CarsCount, string SortByColumn) {
            return base.Channel.searchProduct(makeID, modelId, zipCode, pageSize, pageIndex, ref CarsCount, SortByColumn);
        }
        
        public void Qualify_All_Products() {
            base.Channel.Qualify_All_Products();
        }
        
        public void Qualify_All_Products_to_RecoverDeletedProducts() {
            base.Channel.Qualify_All_Products_to_RecoverDeletedProducts();
        }
        
        public bool AddProductUsingNadaService(string VIN, string Condition, int mileage, int SellerZip, string SellerEmail, string SellerName, string SellerNotes, string Phone, bool Offer, ref string Msg) {
            return base.Channel.AddProductUsingNadaService(VIN, Condition, mileage, SellerZip, SellerEmail, SellerName, SellerNotes, Phone, Offer, ref Msg);
        }
        
        public Edrive.Edrivie_Service_Ref.Products AddProduct(out bool status, Edrive.Edrivie_Service_Ref.Products Prd, ref string Msg, System.Collections.Generic.List<string> OptionsID) {
            return base.Channel.AddProduct(out status, Prd, ref Msg, OptionsID);
        }
        
        public int GetProductRating(int productId) {
            return base.Channel.GetProductRating(productId);
        }
        
        public bool AddProductRating(out string Msg, int id, int score, string p) {
            return base.Channel.AddProductRating(out Msg, id, score, p);
        }
        
        public void AddProductPicture(int ProductId, string fileName) {
            base.Channel.AddProductPicture(ProductId, fileName);
        }
        
        public int GetAdvancedSearchProducts_Count(Edrive.Edrivie_Service_Ref.AdvancedSearchAttributes _attributes) {
            return base.Channel.GetAdvancedSearchProducts_Count(_attributes);
        }
        
        public System.Collections.Generic.List<Edrive.Edrivie_Service_Ref.Products> GetAdvancedSearchProducts(Edrive.Edrivie_Service_Ref.AdvancedSearchAttributes _attributes, int pageSize, int pageIndex, string SortByColumn) {
            return base.Channel.GetAdvancedSearchProducts(_attributes, pageSize, pageIndex, SortByColumn);
        }
        
        public System.Collections.Generic.List<string> BindDriveType() {
            return base.Channel.BindDriveType();
        }
        
        public System.Collections.Generic.List<Edrive.Edrivie_Service_Ref.Product_Model> BindModel(int makeid) {
            return base.Channel.BindModel(makeid);
        }
        
        public System.Collections.Generic.List<Edrive.Edrivie_Service_Ref.Product_Make> BindMake() {
            return base.Channel.BindMake();
        }
        
        public System.Collections.Generic.List<Edrive.Edrivie_Service_Ref.Product_Make> bindMakeAttributes() {
            return base.Channel.bindMakeAttributes();
        }
        
        public System.Collections.Generic.List<Edrive.Edrivie_Service_Ref.Product_Type> bindtypeAttributes() {
            return base.Channel.bindtypeAttributes();
        }
        
        public System.Collections.Generic.List<Edrive.Edrivie_Service_Ref.Product_Body> BindBodyType() {
            return base.Channel.BindBodyType();
        }
        
        public System.Collections.Generic.List<Edrive.Edrivie_Service_Ref.Products> GetTransmission() {
            return base.Channel.GetTransmission();
        }
        
        public System.Collections.Generic.List<Edrive.Edrivie_Service_Ref.Products> GetEngine() {
            return base.Channel.GetEngine();
        }
        
        public Edrive.Edrivie_Service_Ref.Products GetProductByID(int ProductID) {
            return base.Channel.GetProductByID(ProductID);
        }
        
        public System.Collections.Generic.List<Edrive.Edrivie_Service_Ref.Products> GetProductByIDs(System.Collections.Generic.List<int> productIDs) {
            return base.Channel.GetProductByIDs(productIDs);
        }
        
        public System.Collections.Generic.List<Edrive.Edrivie_Service_Ref.Products> Get_FeaturedVehicles(int VehCounts) {
            return base.Channel.Get_FeaturedVehicles(VehCounts);
        }
        
        public bool IsProductExist_by_VIN(string Vin) {
            return base.Channel.IsProductExist_by_VIN(Vin);
        }
        
        public bool IsProductExist_by_VIN_for_other_vehicle(string Vin, int ProductID) {
            return base.Channel.IsProductExist_by_VIN_for_other_vehicle(Vin, ProductID);
        }
        
        public System.Collections.Generic.List<Edrive.Edrivie_Service_Ref.Products> GetProductsByDealerID(int DealerID) {
            return base.Channel.GetProductsByDealerID(DealerID);
        }
        
        public void AddProductOptions(string OPTIONS, int ProductID) {
            base.Channel.AddProductOptions(OPTIONS, ProductID);
        }
        
        public System.Collections.Generic.List<Edrive.Edrivie_Service_Ref.ProductOptions> GetAllProductOptions() {
            return base.Channel.GetAllProductOptions();
        }
        
        public System.Collections.Generic.List<Edrive.Edrivie_Service_Ref.ProductOptions> GetAllProductOptions_By_ProductID(int ProductID) {
            return base.Channel.GetAllProductOptions_By_ProductID(ProductID);
        }
        
        public void AddPicsToProduct(System.Collections.Generic.List<string> Pics, int ProductID) {
            base.Channel.AddPicsToProduct(Pics, ProductID);
        }
        
        public Edrive.Edrivie_Service_Ref.Product_Make GetMakeById(int makeId) {
            return base.Channel.GetMakeById(makeId);
        }
        
        public Edrive.Edrivie_Service_Ref.Product_Body GetBodybyId(int bodyid) {
            return base.Channel.GetBodybyId(bodyid);
        }
        
        public Edrive.Edrivie_Service_Ref.Product_Model GetModelbyId(int ModelID) {
            return base.Channel.GetModelbyId(ModelID);
        }
        
        public Edrive.Edrivie_Service_Ref.Customer GetDealerbyProductID(int ProductID) {
            return base.Channel.GetDealerbyProductID(ProductID);
        }
        
        public System.Collections.Generic.List<Edrive.Edrivie_Service_Ref.Products> SearchProduct_for_ManageProduct(string VIN, string Stock, int makeId, string _ComapnyName, string _DealerEmail, string RoleName, System.Nullable<bool> isOnlyFeatured, int pageIndex, int pageSize, ref int CarsCount) {
            return base.Channel.SearchProduct_for_ManageProduct(VIN, Stock, makeId, _ComapnyName, _DealerEmail, RoleName, isOnlyFeatured, pageIndex, pageSize, ref CarsCount);
        }
    }
}
